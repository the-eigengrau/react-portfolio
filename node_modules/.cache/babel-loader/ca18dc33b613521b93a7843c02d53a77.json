{"ast":null,"code":"// MessageParser starter code\nclass MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n\n  parse(message) {\n    const lowerCaseMessage = message.toLowerCase(); //greetings\n\n    const greetingArray = ['hey', 'hello', 'hi', 'howdy', 'yo'];\n    var n;\n\n    for (n = 0; n < greetingArray.length; n++) {\n      if (lowerCaseMessage.includes(greetingArray[n])) {\n        this.actionProvider.greet();\n      }\n    }\n\n    const yesArray = ['yes', 'yeah', 'yep', 'ya', 'more', 'books'];\n    var x;\n\n    for (x = 0; x < greetingArray.length; x++) {\n      if (lowerCaseMessage.includes(yesArray[x])) {\n        this.actionProvider.books();\n      }\n    }\n\n    const starArray = ['star', 'no', 'holocron'];\n    var a;\n\n    for (a = 0; a < starArray.length; a++) {\n      if (lowerCaseMessage.includes(starArray[a])) {\n        this.actionProvider.greet();\n        this.actionProvider.starWars();\n        this.actionProvider.books();\n      }\n    }\n\n    const drinkArray = ['droids', 'droid', 'drink', 'cocktail', 'booze'];\n    var a;\n\n    for (a = 0; a < drinkArray.length; a++) {\n      if (lowerCaseMessage.includes(drinkArray[a])) {\n        this.actionProvider.drink();\n      }\n    }\n\n    const helpArray = ['help', 'what', 'how'];\n    var i;\n\n    for (i = 0; i < helpArray.length; i++) {\n      if (lowerCaseMessage.includes(helpArray[i]) && !lowerCaseMessage.includes('drink')) {\n        this.actionProvider.help();\n      }\n    }\n  }\n\n} //starwars\n\n\nexport default MessageParser;","map":{"version":3,"sources":["/Users/ayon/Development/react-portfolio/src/Pages/BookRecommender/MessageParser.js"],"names":["MessageParser","constructor","actionProvider","parse","message","lowerCaseMessage","toLowerCase","greetingArray","n","length","includes","greet","yesArray","x","books","starArray","a","starWars","drinkArray","drink","helpArray","i","help"],"mappings":"AAAA;AACA,MAAMA,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AAC1B,SAAKA,cAAL,GAAsBA,cAAtB;AACD;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACb,UAAMC,gBAAgB,GAAGD,OAAO,CAACE,WAAR,EAAzB,CADa,CAGb;;AACA,UAAMC,aAAa,GAAG,CAAC,KAAD,EAAO,OAAP,EAAe,IAAf,EAAoB,OAApB,EAA4B,IAA5B,CAAtB;AACA,QAAIC,CAAJ;;AACA,SAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAAGD,aAAa,CAACE,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,UAAIH,gBAAgB,CAACK,QAAjB,CAA0BH,aAAa,CAACC,CAAD,CAAvC,CAAJ,EAAiD;AAC/C,aAAKN,cAAL,CAAoBS,KAApB;AACD;AACF;;AAED,UAAMC,QAAQ,GAAG,CAAC,KAAD,EAAO,MAAP,EAAc,KAAd,EAAoB,IAApB,EAAyB,MAAzB,EAAgC,OAAhC,CAAjB;AACA,QAAIC,CAAJ;;AACA,SAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAAGN,aAAa,CAACE,MAA3B,EAAmCI,CAAC,EAApC,EAAwC;AACtC,UAAIR,gBAAgB,CAACK,QAAjB,CAA0BE,QAAQ,CAACC,CAAD,CAAlC,CAAJ,EAA4C;AAC1C,aAAKX,cAAL,CAAoBY,KAApB;AACD;AACF;;AAED,UAAMC,SAAS,GAAG,CAAC,MAAD,EAAQ,IAAR,EAAa,UAAb,CAAlB;AACA,QAAIC,CAAJ;;AACA,SAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAAGD,SAAS,CAACN,MAAvB,EAA+BO,CAAC,EAAhC,EAAoC;AAClC,UAAIX,gBAAgB,CAACK,QAAjB,CAA0BK,SAAS,CAACC,CAAD,CAAnC,CAAJ,EAA6C;AAC3C,aAAKd,cAAL,CAAoBS,KAApB;AACA,aAAKT,cAAL,CAAoBe,QAApB;AACA,aAAKf,cAAL,CAAoBY,KAApB;AACD;AACF;;AAED,UAAMI,UAAU,GAAG,CAAC,QAAD,EAAU,OAAV,EAAkB,OAAlB,EAA0B,UAA1B,EAAqC,OAArC,CAAnB;AACA,QAAIF,CAAJ;;AACA,SAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAAGE,UAAU,CAACT,MAAxB,EAAgCO,CAAC,EAAjC,EAAqC;AACnC,UAAIX,gBAAgB,CAACK,QAAjB,CAA0BQ,UAAU,CAACF,CAAD,CAApC,CAAJ,EAA8C;AAC5C,aAAKd,cAAL,CAAoBiB,KAApB;AACD;AACF;;AAED,UAAMC,SAAS,GAAG,CAAC,MAAD,EAAQ,MAAR,EAAe,KAAf,CAAlB;AACA,QAAIC,CAAJ;;AACA,SAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAAGD,SAAS,CAACX,MAAvB,EAA+BY,CAAC,EAAhC,EAAoC;AAClC,UAAIhB,gBAAgB,CAACK,QAAjB,CAA0BU,SAAS,CAACC,CAAD,CAAnC,KAA2C,CAAChB,gBAAgB,CAACK,QAAjB,CAA0B,OAA1B,CAAhD,EAAoF;AAClF,aAAKR,cAAL,CAAoBoB,IAApB;AACD;AACF;AACF;;AAlDiB,C,CAqDlB;;;AAEF,eAAetB,aAAf","sourcesContent":["// MessageParser starter code\nclass MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n\n  parse(message) {\n    const lowerCaseMessage = message.toLowerCase()\n\n    //greetings\n    const greetingArray = ['hey','hello','hi','howdy','yo']\n    var n;\n    for(n=0; n < greetingArray.length; n++) {\n      if (lowerCaseMessage.includes(greetingArray[n])) {\n        this.actionProvider.greet()\n      }\n    }\n\n    const yesArray = ['yes','yeah','yep','ya','more','books']\n    var x;\n    for(x=0; x < greetingArray.length; x++) {\n      if (lowerCaseMessage.includes(yesArray[x])) {\n        this.actionProvider.books()\n      }\n    }\n\n    const starArray = ['star','no','holocron']\n    var a;\n    for(a=0; a < starArray.length; a++) {\n      if (lowerCaseMessage.includes(starArray[a])) {\n        this.actionProvider.greet()\n        this.actionProvider.starWars()\n        this.actionProvider.books()\n      }\n    }\n\n    const drinkArray = ['droids','droid','drink','cocktail','booze']\n    var a;\n    for(a=0; a < drinkArray.length; a++) {\n      if (lowerCaseMessage.includes(drinkArray[a])) {\n        this.actionProvider.drink()\n      }\n    }\n\n    const helpArray = ['help','what','how']\n    var i;\n    for(i=0; i < helpArray.length; i++) {\n      if (lowerCaseMessage.includes(helpArray[i]) && !lowerCaseMessage.includes('drink')) {\n        this.actionProvider.help()\n      }\n    }\n  }\n  }\n\n  //starwars\n\nexport default MessageParser;\n"]},"metadata":{},"sourceType":"module"}